{"version":3,"sources":["actions.js"],"names":[],"mappings":"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","file":"actions-compiled.js","sourcesContent":["/*global gettext, interpolate, ngettext*/\n(function($) {\n    'use strict';\n    var lastChecked;\n\n    $.fn.actions = function(opts) {\n        var options = $.extend({}, $.fn.actions.defaults, opts);\n        var actionCheckboxes = $(this);\n        var list_editable_changed = false;\n        var showQuestion = function() {\n            $(options.acrossClears).hide();\n            $(options.acrossQuestions).show();\n            $(options.allContainer).hide();\n        },\n        showClear = function() {\n            $(options.acrossClears).show();\n            $(options.acrossQuestions).hide();\n            $(options.actionContainer).toggleClass(options.selectedClass);\n            $(options.allContainer).show();\n            $(options.counterContainer).hide();\n        },\n        reset = function() {\n            $(options.acrossClears).hide();\n            $(options.acrossQuestions).hide();\n            $(options.allContainer).hide();\n            $(options.counterContainer).show();\n        },\n        clearAcross = function() {\n            reset();\n            $(options.acrossInput).val(0);\n            $(options.actionContainer).removeClass(options.selectedClass);\n        },\n        checker = function(checked) {\n            if (checked) {\n                showQuestion();\n            } else {\n                reset();\n            }\n            $(actionCheckboxes).prop(\"checked\", checked)\n                .parent().parent().toggleClass(options.selectedClass, checked);\n        },\n        updateCounter = function() {\n            var sel = $(actionCheckboxes).filter(\":checked\").length;\n            // data-actions-icnt is defined in the generated HTML\n            // and contains the total amount of objects in the queryset\n            var actions_icnt = $('.action-counter').data('actionsIcnt');\n            $(options.counterContainer).html(interpolate(\n            ngettext('%(sel)s of %(cnt)s selected', '%(sel)s of %(cnt)s selected', sel), {\n                sel: sel,\n                cnt: actions_icnt\n            }, true));\n            $(options.allToggle).prop(\"checked\", function() {\n                var value;\n                if (sel === actionCheckboxes.length) {\n                    value = true;\n                    showQuestion();\n                } else {\n                    value = false;\n                    clearAcross();\n                }\n                return value;\n            });\n        };\n        // Show counter by default\n        $(options.counterContainer).show();\n        // Check state of checkboxes and reinit state if needed\n        $(this).filter(\":checked\").each(function(i) {\n            $(this).parent().parent().toggleClass(options.selectedClass);\n            updateCounter();\n            if ($(options.acrossInput).val() === 1) {\n                showClear();\n            }\n        });\n        $(options.allToggle).show().click(function() {\n            checker($(this).prop(\"checked\"));\n            updateCounter();\n        });\n        $(\"a\", options.acrossQuestions).click(function(event) {\n            event.preventDefault();\n            $(options.acrossInput).val(1);\n            showClear();\n        });\n        $(\"a\", options.acrossClears).click(function(event) {\n            event.preventDefault();\n            $(options.allToggle).prop(\"checked\", false);\n            clearAcross();\n            checker(0);\n            updateCounter();\n        });\n        lastChecked = null;\n        $(actionCheckboxes).click(function(event) {\n            if (!event) { event = window.event; }\n            var target = event.target ? event.target : event.srcElement;\n            if (lastChecked && $.data(lastChecked) !== $.data(target) && event.shiftKey === true) {\n                var inrange = false;\n                $(lastChecked).prop(\"checked\", target.checked)\n                    .parent().parent().toggleClass(options.selectedClass, target.checked);\n                $(actionCheckboxes).each(function() {\n                    if ($.data(this) === $.data(lastChecked) || $.data(this) === $.data(target)) {\n                        inrange = (inrange) ? false : true;\n                    }\n                    if (inrange) {\n                        $(this).prop(\"checked\", target.checked)\n                            .parent().parent().toggleClass(options.selectedClass, target.checked);\n                    }\n                });\n            }\n            $(target).parent().parent().toggleClass(options.selectedClass, target.checked);\n            lastChecked = target;\n            updateCounter();\n        });\n        $('form#changelist-form table#result_list tr').on('change', 'td:gt(0) :input', function() {\n            list_editable_changed = true;\n        });\n        $('form#changelist-form button[name=\"index\"]').click(function(event) {\n            if (list_editable_changed) {\n                return confirm(gettext(\"You have unsaved changes on individual editable fields. If you run an action, your unsaved changes will be lost.\"));\n            }\n        });\n        $('form#changelist-form input[name=\"_save\"]').click(function(event) {\n            var action_changed = false;\n            $('select option:selected', options.actionContainer).each(function() {\n                if ($(this).val()) {\n                    action_changed = true;\n                }\n            });\n            if (action_changed) {\n                if (list_editable_changed) {\n                    return confirm(gettext(\"You have selected an action, but you haven't saved your changes to individual fields yet. Please click OK to save. You'll need to re-run the action.\"));\n                } else {\n                    return confirm(gettext(\"You have selected an action, and you haven't made any changes on individual fields. You're probably looking for the Go button rather than the Save button.\"));\n                }\n            }\n        });\n    };\n    /* Setup plugin defaults */\n    $.fn.actions.defaults = {\n        actionContainer: \"div.actions\",\n        counterContainer: \"span.action-counter\",\n        allContainer: \"div.actions span.all\",\n        acrossInput: \"div.actions input.select-across\",\n        acrossQuestions: \"div.actions span.question\",\n        acrossClears: \"div.actions span.clear\",\n        allToggle: \"#action-toggle\",\n        selectedClass: \"selected\"\n    };\n    $(document).ready(function() {\n        var $actionsEls = $('tr input.action-select');\n        if ($actionsEls.length > 0) {\n            $actionsEls.actions();\n        }\n    });\n})(django.jQuery);\n"]}